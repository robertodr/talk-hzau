name: inverse
layout: true
class: center, middle, inverse
---
.title[Polarizable Continuum Model]

.subtitle[From Theory to Implementation using PCMSolver]

.author[Roberto Di Remigio, ] .coauthor[Luca Frediani]

.institution[UiT -- The Arctic University of Norway]

.date[10 October 2016, Wuhan]

.footnote[[CC BY 4.0](https://creativecommons.org/licenses/by/4.0/) licensed.
Browse slides at [http://tinyurl.com/hzh8djv](http://tinyurl.com/hzh8djv)]

???

This talk is an introduction to continuum solvation models and in particular to
the polarizable continuum model (PCM)
I will introduce the basic features of the model and talk about our
implementation as an independent library

---
layout: false

.left-column[
  ## Outline
]
.right-column[

- The problem of solvation

- Polarizable continuum model

- PCM and quantum mechanics

- Modular code development

- PCMSolver

- Using PCMSolver

]

???

---
layout: false
class: split-60

## Quantum Chemistry
### **Understand** and **predict** chemistry from first principles

.column[
- Quantum many-body theory applied to chemistry

`$$
H\Psi = E\Psi
$$`

- Compute molecular energies and properties
<p style="text-align:center;"><img src="images/pcm_openrsp.svg" style="width: 80%"></p>
<p style="clear: both;">

]
.column[
<p style="text-align:center;"><img src="images/model-chem.svg" style="width: 40%"></p>
<p style="clear: both;">

<font color="red">
<center>Approximations needed!!!</center>
</font>
<p style="clear: both;">
]

???

- Quantum chemistry is the use of physical and mathematical models based on
  quantum many-body theory to the chemical systems.
- We want to solve the Schr√∂dinger equation for a many-electron system in the
  Born--Oppenheimer approximation.
- Knowledge of the wave function enables calculation of molecular energies and
  properties. Most properties we have in mind are experimentally accessible by
  spectroscopic methods: excitation energies, transition moments, vibrational
  frequencies and so on
- Due to the large size of the systems we are normally interested in, we need
  approximations. Hartree--Fock, Density Functional Theory and so on.

---
layout: false
class: split-50
## The Problem of Solvation

.column[
<font color="red">
Solvent effects
</font>
<p style="clear: both;">
- Direct
- Indirect
- Local field
- Dynamic
- Specific

Free energy:
  `$$ G = G_\mathrm{el} + G_\mathrm{dis} + G_\mathrm{rep} + G_\mathrm{Mm}(T) $$`

**Balanced description** needed to reproduce/predict experiments!
]
.column[
<p style="text-align:center;"><img src="images/pyridine+water_12AA_QM.png" style="width: 45%"></p>
<p style="clear: both;">
]

<font color="red">
Problems
</font>
<p style="clear: both;">

- Size \\(\Leftrightarrow\\) accurate _ab initio_ not possible
- Conformations \\(\Leftrightarrow\\) statistical sampling

???

- Chemistry is a wet science: experiments mostly happen in solution.
- We can classify solvent effects as:
  * Direct: these effects stem straightforwardly from the modification
    underwent by the solute electronic density when interacting with the
    environment.
  * Indirect: it is common for solutes to exhibit different minimum-energy
    conformations in different environments. These effects are commonly
    labelled as indirect.
  * Local field: light-matter interactions are also affected by the
    environment. Local modifications of externally applied fields subtly
    influence molecular responses.
  * Dynamic: the presence of the environment radically influences excited
    states, since relaxation processes in the medium become important.
  * Specific:  This catch-all category includes all effects stemming from the
    peculiar solute-solvent pair interactions that cannot be fully described
    under any of the previous labels. In general, modelling such effects
    demands an atomistic level of detail.
- Size is a huge problem. It is simply not possible to model large systems very
  accurately.
- Moreover, the conformational space is very large and needs to be sampled
  extensively to have meaningful results.
- Energy decomposition.

<font color="red">
<center>Once again, approximations needed!!!</center>
</font>
<p style="clear: both;">

---
layout: false
class: split-50
## Multiscale models.red[<sup>1</sup>]

- Use **quantum** and **classical** physics together:
  * quantum for chemically relevant subsystem
  * classical for the environment

.column[
<p style="text-align:center;"><img src="images/gfp_barrel.png" style="width: 100%"></p>
<p style="clear: both;">
]
.column[
<p style="text-align:center;"><img src="images/pyridine+water_12AA_QMMM.png" style="width: 50%"></p>
<p style="clear: both;">
]

.footnote[.red[<sup>1</sup>] H. M. Senn, W. Thiel, _Angew. Chem. Int. Ed. Engl._, __48__, 1198, (2009)]

???

- The idea of multiscale models is to _focus_ on the chemically relevant part
  of the system and treat the environment approximately.

---
layout: false
class: split-60
## QM/MM.red[<sup>2</sup>]

- Use **quantum** and **classical** physics together:
  * quantum for chemically relevant subsystem
  * _classical multipoles_ for the environment

.column[
- Nonpolarizable MM <img src="images/neutral_face.svg" style="width: 7%">
- Polarizable MM <img src="images/smiley.svg" style="width: 7%">
- Chemical detail <img src="images/smiley.svg" style="width: 7%">
- Dispersion and repulsion approximate <img src="images/disappointed_relieved.svg" style="width: 7%">
- Statistical sampling and averaging <img src="images/sob.svg" style="width: 7%">
- MM region _cutoff radius_? <img src="images/scream.svg" style="width: 7%">
]
.column[
<p style="text-align:right;"><img src="images/pyridine+water_12AA_QMMM.png" style="width: 40%"></p>
<p style="clear: both;">
]

.footnote[.red[<sup>1</sup>] H. M. Senn, W. Thiel, _Angew. Chem. Int. Ed. Engl._, __48__, 1198, (2009)]

???

- Nonpolarizable MM only has static multipoles. Thus no polarization.
- Polarizable MM has static multipoles + polarizable dipoles.
- Dispersion and repulsion added as classical force fields (Lennard--Jones)
- Run MD simulation to obtain snapshots. Run QM/MM. Average.
- How large does the MM region need to be?

---
layout: false
class: split-60

## QM/Continuum.red[<sup>2</sup>]

- Use **quantum** and **classical** physics together:
  * quantum for chemically relevant subsystem
  * _continuum dielectric_ for the environment

.column[
- **Exact** electrostatics <img src="images/smiley.svg" style="width: 7%">
- Self-consistent polarization <img src="images/smiley.svg" style="width: 7%">
- **No** chemical detail <img src="images/sob.svg" style="width: 7%">
- Dispersion and repulsion approximate <img src="images/disappointed_relieved.svg" style="width: 7%">
- Statistically averaged _by construction_ <img src="images/smiley.svg" style="width: 7%">
]
.column[
<p style="text-align:right;"><img src="images/pyridine_Continuum.png" style="width: 40%"></p>
<p style="clear: both;">
]

.footnote[.red[<sup>2</sup>] J. Tomasi, B. Mennucci, R. Cammi, _Chem. Rev._, __105__, 2999, (2005)]

???

---
layout: false
class: split-60

## Best of both worlds: QM/MM/Continuum.red[<sup>3</sup>]

- Use **quantum** and **classical** physics together:
  * quantum for chemically relevant subsystem
  * _classical multipoles_ for the environment in inner region
  * _continuum dielectric_ for the environment in outer region

.column[
- Chemical detail in _short range_ <img src="images/smiley.svg" style="width: 7%">
- Exact _long-range_ electrostatics <img src="images/smiley.svg" style="width: 7%">
- Dispersion and repulsion approximate <img src="images/disappointed_relieved.svg" style="width: 7%">
- Statistical sampling and averaging <img src="images/sob.svg" style="width: 7%">
- MM region _cutoff radius_? <img src="images/scream.svg" style="width: 7%">
]
.column[
<p style="text-align:right;"><img src="images/pyridine+water_12AA_QMMMContinuum.png" style="width: 40%"></p>
<p style="clear: both;">
]

.footnote[.red[<sup>3</sup>] A. H. Steindal, K. Ruud, L. Frediani, K. Aidas, J. Kongsted, _J. Phys. Chem. B_, __115__, 3027, (2011)]

???

---
layout: false
class: split-60

## QM/Continuum: the polarizable continuum model.red[<sup>2</sup>]

.column[
- Replace environment with continuum \\(\varepsilon\\)
- Create cavity in continuum \\(\Omega_i\\)
- Vacuum inside cavity \\(\varepsilon=1\\)
- Solute charge density _entirely_ in \\(\Omega_i\\)

A problem in classical electrostatics:
`$$
 \begin{align}
  L_\mathrm{i} u(\mathbf{r}) &= -4\pi\rho(\mathbf{r}) \quad \forall \mathbf{r} \in \Omega_\mathrm{i} \\
  L_\mathrm{e} u(\mathbf{r}) &= 0 \quad \forall \mathbf{r} \notin \Omega_\mathrm{i} \\
  [u(\mathbf{s})] &= 0 \quad \forall \mathbf{s}\,\text{in}\,\Gamma \\
  [\partial_L u(\mathbf{s})] &= 0 \quad \forall \mathbf{s}\,\text{in}\,\Gamma \\
  |u(\mathbf{r})| &\leq C \|\mathbf{r} \|^{-1} \,\,\text{for}\,\,\| \mathbf{r} \|\rightarrow\infty
 \end{align}
$$`
]
.column[
<p style="text-align:right;"><img src="images/alanine.svg" style="width: 40%"></p>
<p style="clear: both;">
]

.footnote[.red[<sup>2</sup>] J. Tomasi, B. Mennucci, R. Cammi, _Chem. Rev._, __105__, 2999, (2005)]

???

- Model the solvent as a polarizable dielectric continuum
- Parameters for the definition of the boundary, i.e. the cavity
- Parameters describing the solvent: permittivity (static and optical)
- Notice that the solvent parameters are, _by definition_, averaged!

---
## Mathematics of PCM.red[<sup>4</sup>]

- Transmission problem, find \\(u\\) such that:
`$$
 \begin{align}
  L_\mathrm{i} u(\mathbf{r}) &= -4\pi\rho(\mathbf{r}) \quad \forall \mathbf{r} \in \Omega_\mathrm{i} \\
  L_\mathrm{e} u(\mathbf{r}) &= 0 \quad \forall \mathbf{r} \notin \Omega_\mathrm{i} \\
  [u(\mathbf{s})] &= 0 \quad \forall \mathbf{s}\,\text{in}\,\Gamma \\
  [\partial_L u(\mathbf{s})] &= 0 \quad \forall \mathbf{s}\,\text{in}\,\Gamma \\
  |u(\mathbf{r})| &\leq C \|\mathbf{r} \|^{-1} \,\,\text{for}\,\,\| \mathbf{r} \|\rightarrow\infty
 \end{align}
$$`

    * \\(L_\star\\) are elliptic differential operators
    * Dirichelt condition: \\([u(\mathbf{s})]\\)
    * Neumann condition: \\([\partial_L u(\mathbf{s})]\\)

- Define the _reaction potential_:
`$$
 u(\mathbf{r}) = \varphi(\mathbf{r}) + \xi(\mathbf{r})
 = \int_C \mathop{}\!\mathrm{d}\mathbf{r}^\prime \frac{\rho(\mathbf{r}^\prime)}{|\mathbf{r} - \mathbf{r}^\prime|} +
  \int_{\partial C} \mathop{}\!\mathrm{d}\mathbf{s} \frac{\color{red}{\sigma(\mathbf{s})}}{|\mathbf{r} - \mathbf{s}|}
$$`

.footnote[.red[<sup>4</sup>] E. Canc√®s, B. Mennucci, _J. Math. Chem._, __23__, 309, (1998)]

???

- \\(L_\star\\) are elliptic differential operators
- Trace operators are the extension of the concept of restriction of a function
  over a boundary to generalized functions in Sobolev space
- Conormal derivative extends the notion of a normal derivative to functions in
  Sobolev spaces
- \\(\sigma(\mathbf{s})\\) is called the apparent surface charge (ASC)

---

## Mathematics of PCM, contd..red[<sup>5</sup>]

_Apparent surface charge_ (ASC):
- _Unique solution_ to the IEF-PCM equation:
`$$
\left[\left(2\pi\mathcal{I} - \mathcal{D}_\mathrm{e}\right)\mathcal{S}_\mathrm{i} +
      \mathcal{S}_\mathrm{e}\left(2\pi\mathcal{I} + \mathcal{D}^\dagger_\mathrm{i}\right) \right]\color{red}{\sigma} =
-\left[\left(2\pi\mathcal{I} - \mathcal{D}_\mathrm{e}\right) -
\mathcal{S}_\mathrm{e}\mathcal{S}_\mathcal{i}^{-1}\left(2\pi\mathcal{I} - \mathcal{D}_\mathrm{i}\right)\right]\color{blue}{\varphi}
$$`
- Integral operators are Calder√≥n projector components:
`$$
 \begin{align}
  (\mathcal{S}_\star f)(\mathbf{s}) &= \int_{\partial C} \mathop{}\!\mathrm{d}\mathbf{s}^\prime \color{red}{G_\star(\mathbf{s}, \mathbf{s}^\prime)}f(\mathbf{s}^\prime) \\
  (\mathcal{D}_\star f)(\mathbf{s}) &= \int_{\partial C} \mathop{}\!\mathrm{d}\mathbf{s}^\prime [\partial_{L_\star}^\prime\color{red}{G_\star(\mathbf{s}, \mathbf{s}^\prime)}]f(\mathbf{s}^\prime) \\
  (\mathcal{D}^\dagger_\star f)(\mathbf{s}) &= \int_{
  \partial C} \mathop{}\!\mathrm{
  d}\mathbf{s}^\prime [\partial_{
  L_\star}\color{red}{G_\star(\mathbf{s}, \mathbf{s}^\prime)}]f(\mathbf{s}^\prime)
 \end{align}
$$`

<font color="red">
<center>How to solve this? <img src="images/fearful.svg" style="width: 5%"></center>
</font>
<p style="clear: both;">

.footnote[.red[<sup>5</sup>] S. A. Sauter and C. Schwab, _Boundary Element Methods_, Springer, 2011]

???

- We've transformed a boundary value problem (BVP) into a boundary integral equation (BIE)
- Integral operators are defined in terms of traces and conormal derivatives
- The integral operators have well-defined mapping properties between Sobolev
  spaces of fractional order
- Knowledge of the Green's functions inside and outside the cavity is key to
  the method

---

## Isotropic PCM.red[<sup>2</sup>]

Assume _homogeneous_ and _isotropic_ dielectric, \\(\varepsilon\\)
`$$
 \begin{alignat}{2}
 G_\mathrm{e}(\mathbf{r}, \mathbf{r}^\prime)
 = \frac{1}{\varepsilon |\mathbf{r} - \mathbf{r}^\prime| }
 = \frac{1}{
\varepsilon}G_\mathrm{i}(\mathbf{r}, \mathbf{r}^\prime),
 \quad&
 G_\mathrm{i}(\mathbf{r}, \mathbf{r}^\prime)
 = \frac{1}{|\mathbf{r} - \mathbf{r} ^\prime | }
 \end{alignat}
$$`
Then one has:
`$$
\left[ 2\pi \left(\frac{\varepsilon+1}{\varepsilon-1}\right) - \mathcal{D}\right]
\mathcal{S}\color{red}{\sigma} = -\left( 2\pi - \mathcal{D} \right)
\color{blue}{\varphi}
$$`

<font color="red">
<center>How to solve this? <img src="images/fearful.svg" style="width: 5%"></center>
</font>
<p style="clear: both;">

.footnote[.red[<sup>2</sup>] J. Tomasi, B. Mennucci, R. Cammi, _Chem. Rev._, __105__, 2999, (2005)]

???

---

## COnductor-like Screening MOdel (COSMO).red[<sup>2</sup>]

Let \\(\varepsilon\rightarrow\infty\\), then:
`$$
\mathcal{S}\color{red}{\sigma} = -f(\varepsilon)\color{blue}{\varphi}
$$`
accounting for dielectric conditions with:
`$$
f(\varepsilon) = \frac{\varepsilon -  1}{\varepsilon + x},\quad 0 \leq x \leq 1
$$`

<font color="red">
<center>How to solve this? <img src="images/fearful.svg" style="width: 5%"></center>
</font>
<p style="clear: both;">

.footnote[.red[<sup>2</sup>] J. Tomasi, B. Mennucci, R. Cammi, _Chem. Rev._, __105__, 2999, (2005)]

???

---
layout: false
class: split-70

## Boundary element method and PCM.red[<sup>6</sup>]

.column[
Solution by a boundary element method (BEM) <img src="images/smiley.svg" style="width: 5%">

* \\(N_\mathrm{ts}\\) finite elements on the cavity boundary
* Form boundary integral operators: _Galerkin_ or _collocation_ method
`$$
 \mathbf{T}(\varepsilon)\color{red}{\mathbf{q}} = - \mathbf{R}\color{blue}{\mathbf{v}}
$$`
* Solve linear system: direct inversion or iterative solver
]
.column[
<p style="text-align:right;"><img src="images/benzene_GePol.png" style="width: 30%"></p>
<p style="clear: both;">
]

- Similar equation for IEF-PCM, isotropic PCM and COSMO
- _Independent_ of QM method!

.footnote[.red[<sup>6</sup>] A. Ern and J. L. Guermond, _Theory and Practice of Finite Elements_, Springer, 2004]

???

---
layout: false
class: split-60

## Self-Consistent Field with PCM.red[<sup>2</sup>]

.column[
* _Molecular electrostatic potential_ (MEP):
  `$$
  v_{I} = \sum_{\mu\nu}^{N_\mathrm{AO}} \color{blue}{v_{\mu\nu, I}} D_{\nu\mu},
  \quad
  \color{blue}{v_{\mu\nu, I}} = \int\mathop{}\!\mathrm{d}\mathbf{r} \frac{-\chi^*_\mu(\mathbf{r})\chi_\nu(\mathbf{r}) }{|\mathbf{r} - \mathbf{s}_I|}
  $$`
* _Apparent surface charge_ (ASC):
  `$$
   \mathbf{T}(\varepsilon)\color{red}{\mathbf{q}} = - \mathbf{R}\color{blue}{\mathbf{v}}
  $$`
* Fock matrix:
  `$$
   f_{\mu\nu} = h_{\mu\nu} +
    \sum_{\kappa\lambda}D_{\kappa\lambda}(g_{\mu\nu\kappa\lambda} - \gamma g_{\mu\lambda\kappa\nu}) +
    f_{\mathrm{xc}; \mu\nu} +
    \color{green}{V_{\mu\nu}^\mathrm{PCM}}
  $$`
  - PCM term:
  `$$
    \color{green}{V_{\mu\nu}^\mathrm{PCM}} = \sum_{I=1}^{N_\mathrm{ts}}\color{red}{q_I} \color{blue}{v_{\mu\nu, I}}
  $$`
]
.column[
<p style="text-align:right;"><img src="images/algorithm.png" style="width: 35%"></p>
<p style="clear: both;">
]

.footnote[.red[<sup>2</sup>] J. Tomasi, B. Mennucci, R. Cammi, _Chem. Rev._, __105__, 2999, (2005)]

???

---

layout: false

## Modular code development.red[<sup>7</sup>]

### Examples

- Lego
- Car manufacturing
- Design of your phone or laptop
- Modular composition when you order a laptop
- Success of USB
- Study programs

### Advantages

- Separation of concerns
- Composability
- Leveraging functionality

.footnote[.red[<sup>7</sup>] Reproduced from [Library design the hard way](http://cicero.xyz/v2/remark/github/bast/talk-library-design/master/talk.mkd/#1)]

---

## Library design in a modular world.red[<sup>7</sup>]

<p style="text-align:center;"><img src="images/joe-paradiso-modular-synth-front.png" style="width: 500px;"/></p>
<p style="clear: both;">

- Copyright Joe Paradiso (MIT)

.footnote[.red[<sup>7</sup>] Reproduced from [Library design the hard way](http://cicero.xyz/v2/remark/github/bast/talk-library-design/master/talk.mkd/#1)]

---

## Must haves 1/2.red[<sup>7</sup>]

### Encapsulation

- Hide internals by language or by convention
- Interface exposed in a separate file
- Expose the "what", hide the "how"

### Documentation

- Separate the "what it can do" from "how is it implemented"
- Documented _application programming interface_ (API)
- Versioned API ([semantic](http://semver.org) or [sentimental](http://sentimentalversioning.org)
  or [romantic](https://github.com/jashkenas/backbone/issues/2888#issuecomment-29076249) versioning)

.footnote[.red[<sup>7</sup>] Reproduced from [Library design the hard way](http://cicero.xyz/v2/remark/github/bast/talk-library-design/master/talk.mkd/#1)]

---

## Must haves 2/2.red[<sup>7</sup>]

### Testable on its own

- Sharpens interfaces
- Once you start testing your library you really see the coupling and cohesion

### Built on its own

- Prerequisite for testable on its own

### Own development history

- Decouple the development history
- Each unit should have its own Git history/repository

.footnote[.red[<sup>7</sup>] Reproduced from [Library design the hard way](http://cicero.xyz/v2/remark/github/bast/talk-library-design/master/talk.mkd/#1)]

---

## PCMSolver: an API for the PCM.red[<sup>8</sup>]

- Open-source licensed (LGPLv3)
- Developed on [GitHub](https://github.com/PCMSolver/pcmsolver)
- C++ project (~5000 LOC) Fortran (~3000 LOC)
<p style="text-align:center;"><img src="images/pcmsolver-scheme.png" style="width: 60%"></p>
<p style="clear: both;">

.footnote[.red[<sup>8</sup>] Find it at [pcmsolver.readthedocs.io](http://pcmsolver.readthedocs.io/en/latest/) and [github.com/PCMSolver/pcmsolver](https://github.com/PCMSolver/pcmsolver)]

---

## PCMSolver: an API for the PCM.red[<sup>8</sup>]

- Capabilities
  * Traditional collocation solvers
  * Isotropic and anisotropic Green's functions
  * Wavelet solvers _in progress_
  * Real-time solvers _in progress_

- Build system
  * [CMake](https://cmake.org/) _via_ [Autocmake](http://autocmake.readthedocs.io/en/latest/)
  * Static and shared libraries available

- API
  * Pure C for interoperability
  * Fortran bindings built on-demand

.footnote[.red[<sup>8</sup>] Find it at [pcmsolver.readthedocs.io](http://pcmsolver.readthedocs.io/en/latest/) and [github.com/PCMSolver/pcmsolver](https://github.com/PCMSolver/pcmsolver)]

---

## PCMSolver: an API for the PCM.red[<sup>8</sup>]

- Testing
  * Use [Catch](https://github.com/philsquared/Catch) C++ framework
  * The `master` branch has 51 tests
  * _Continuous integration_ (CI) on [Travis](https://travis-ci.org/) and [Magnum](https://magnum-ci.com/)

- Release process
  * Public repo on GitHub
  * Private repo on GitLab
  * Precompiled library served on [Anaconda cloud](https://anaconda.org/psi4/pcmsolver)

- Documented:
  * Doxygen for _in-code_ documentation
  * Sphinx for users and programmers documentation
  * Served on [ReadTheDocs](https://readthedocs.org/)

.footnote[.red[<sup>8</sup>] Find it at [pcmsolver.readthedocs.io](http://pcmsolver.readthedocs.io/en/latest/) and [github.com/PCMSolver/pcmsolver](https://github.com/PCMSolver/pcmsolver)]

---

## Interfaces to QM programs

- DALTON (w/ A. H. Steindal, K. Ruud, M. Ringholm _et al._)
  * HF and DFT up to linear electric response properties
  * Interfaced also to open-ended response code (only electric)
  * Status: **unreleased**

- LSDALTON (w/ S. S. Reine)
  * HF and DFT up to linear electric response properties
  * Status: **released**

- Psi4 (w/ T. Daniel Crawford, A. Simmonett, L. A. Burns)
  * HF and DFT
  * Status: **released**

---

## Interfaces to QM programs, contd.

- DIRAC (w/ T. Saue)
  * 4-component, Kramers restricted, HF and DFT up to linear static electric response properties
  * Status: **released**

- ReSpect (w/ M. Repisky, S. Komorowsky, K. Ruud, S. Pipolo)
  * 4-component, Kramers restricted and unrestricted HF and DFT
  * Real-time propagation _in progress_
  * Status: **unreleased**

- KOALA (w/ S. H√∂fener)
  * Subsystem DFT up to linear electric response properties
  * Status: **unreleased**

---

## Using PCMSolver

[Context-aware](https://github.com/bast/context-api-example) API
  * Confine state to module
  * Multiple contexts possible

```Fortran
use, intrinsic :: iso_c_binding
use pcmsolver
type(c_ptr) :: pcm_context
character(kind=c_char, len=1) :: mep_lbl(7) =  &
                                 (/'N', 'u', 'c', 'M', 'E', 'P', c_null_char/)
character(kind=c_char, len=1) :: asc_lbl(7) =  &
                                 (/'N', 'u', 'c', 'A', 'S', 'C', c_null_char/)
real(c_double), allocatable :: grid(:), mep(:), asc(:)
integer(c_int) :: irrep
integer(c_int) :: grid_size, irr_grid_size
real(c_double) :: energy

pcm_context = pcmsolver_new(PCMSOLVER_READER_OWN,           &
                            nr_nuclei, charges, coordinates, &
                            symmetry_info, host_input)
```

---

## Using PCMSolver, contd.

[Context-aware](https://github.com/bast/context-api-example) API
  * Operations require context
  * Enforce namespacing by convention
  * `get` and `set` functions

```Fortran
call pcmsolver_print(pcm_context)
grid_size = pcmsolver_get_cavity_size(pcm_context)
irr_grid_size = pcmsolver_get_irreducible_cavity_size(pcm_context)
allocate(grid(3*grid_size))
grid = 0.0d0
call pcmsolver_get_centers(pcm_context, grid)
```

---

## Using PCMSolver, contd.

[Surface functions](http://pcmsolver.readthedocs.io/en/latest/users/interfacing.html#how-pcmsolver-handles-potentials-and-charges-surface-functions)
  * PCM \\(\Leftrightarrow\\) functions defined on cavity surface
  * Function label + function data = surface function
  * Map of labels and data

```Fortran
allocate(mep(grid_size))
mep = 0.0d0
mep = nuclear_mep(nr_nuclei, charges, &
                  reshape(coordinates, (/ 3, nr_nuclei /)), &
                  grid_size, reshape(grid, (/ 3, grid_size /)))
call pcmsolver_set_surface_function(pcm_context, grid_size, mep, mep_lbl)
irrep = 0
call pcmsolver_compute_asc(pcm_context, mep_lbl, asc_lbl, irrep)
allocate(asc(grid_size))
asc = 0.0d0
call pcmsolver_get_surface_function(pcm_context, grid_size, asc, asc_lbl)
energy = pcmsolver_compute_polarization_energy(pcm_context, mep_lbl, asc_lbl)
```

---
layout: false
class: split-50

## Solvation in the Relativistic Regime.red[<sup>*</sup>]

`$$
\mathbf{F} = \begin{pmatrix}
\mathbf{F}^{LL, \mathrm{vac}} + \mathbf{q}\cdot\mathbf{v}^{LL} & \mathbf{F}^{LS, \mathrm{vac}} \\
\mathbf{F}^{SL, \mathrm{vac}} & \mathbf{F}^{SS, \mathrm{vac}} + \mathbf{q}\cdot\mathbf{v}^{SS}
\end{pmatrix}
$$`
- Extended to EPR and pNMR parameters (ReSpect)

.column[
<p style="text-align:center;"><img src="images/H2O_MEP-diff-pcmdc-dc.png" style="width: 75%"></p>
<p style="clear: both;">
]
.column[
<p style="text-align:center;"><img src="images/H2Po_MEP-diff-pcmdc-dc.png" style="width: 40%"></p>
<p style="clear: both;">
]

.footnote[.red[<sup>*</sup>] R. Di Remigio, R. Bast, L. Frediani, T. Saue, _J. Phys. Chem. A_, __119__, 5061, (2015)]

---

## Using Wavelets for the PCM.red[<sup>*</sup>]

.footnote[.red[<sup>*</sup>] M. Bugeanu, R. Di Remigio, K. Mozgawa, S. S. Reine, H. Harbrecht, L. Frediani, _PCCP_, __17__, 31566, (2015)]

- Sparse representation <img src="images/smiley.svg" style="width: 4%">
- Linear memory and time cost <img src="images/smiley.svg" style="width: 4%">
- Huge number of surface points <img src="images/scream.svg" style="width: 4%">

--

<div class="imageWrapper">
  <img class="overlayImage" src="images/a_2_l_0_5_fs.png" style="width: 90%" align="middle">
--
  <img class="overlayImage" src="images/alpha_convergence.png" style="width: 75%" align="middle">
</div>
<p style="clear: both;">

???

- Use wavelet Galerkin BEM for PCM

---
layout: false
class: split-50

## Spherical Diffuse Interfaces.red[<sup>*</sup>]

.footnote[.red[<sup>*</sup>] R. Di Remigio, K. Mozgawa, H. Cao, V. Weijo, L. Frediani, _J. Chem. Phys._, __144__, 124103, (2016)]

- Modelling of nonhomogeneous environments
- Numerical Green's function

.column[
<p style="text-align:center;"><img src="images/acetone_normal.jpg" style="width: 100%"></p>
<p style="clear: both;">
]
.column[
<p style="text-align:center;"><img src="images/permittivity_profiles.jpg" style="width: 50%"></p>
<p style="clear: both;">
]

---
layout: false
class: split-50

## Spherical Diffuse Interfaces.red[<sup>*</sup>]

.footnote[.red[<sup>*</sup>] R. Di Remigio, K. Mozgawa, H. Cao, V. Weijo, L. Frediani, _J. Chem. Phys._, __144__, 124103, (2016)]

- Modelling of nonhomogeneous environments
- Numerical Green's function

.column[
<p style="text-align:center;"><img src="images/dipole-acetone-perp-water_vapor-width.jpg" style="width: 85%"></p>
<p style="clear: both;">
]
.column[
<p style="text-align:center;"><img src="images/dipole-acetone-perp-water_vapor-curvature.jpg" style="width: 45%"></p>
<p style="clear: both;">
]

---

layout: false

## Acknowldegements

- Prof. Luca Frediani
- Dr. Radovan Bast

---
name: last-page
template: inverse

## Thanks for your attention!

Slideshow created using [remark] and served using [cicero]

Slides available on [GitHub](https://github.com/robertodr/talk-hzau)

Browse slides at [http://tinyurl.com/hzh8djv](http://tinyurl.com/hzh8djv)

[remark]: https://github.com/gnab/remark
[cicero]: https://github.com/bast/cicero
